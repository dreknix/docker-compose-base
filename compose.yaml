---

services:

  traefik:
    container_name: traefik
    image: traefik:v2.10.1
    # command: moved to environment variables traefik.env
    security_opt:
      - "no-new-privileges:true"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - frontend
      - backend
    volumes:
      - "./traefik-config/:/config/"
      - "./traefik-certs/:/certs/"
      - "./traefik-certs/acme.json:/etc/letsencrypt/acme.json"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - ENV_TRAEFIK_HOST
      - ENV_TRAEFIK_EMAIL
      - ENV_TRAEFIK_REALM
      - ENV_TRAEFIK_WHITELIST
    env_file:
      - "traefik.env"
    secrets:
      - traefik_secrets
    labels:
      - "traefik.enable=true"
      # force https and redirect http
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # configure traefik with path prefix and letencrypt
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=leresolver"
      - "traefik.http.routers.traefik.rule=Host(`${ENV_TRAEFIK_HOST:-localhost}`) && PathPrefix(`/traefik`) \
                    || Headers(`Referer`, `https://${ENV_TRAEFIK_HOST:-localhost}/traefik/dashboard/`)"
      - "traefik.http.middlewares.traefik-strip.stripprefix.prefixes=/traefik"
      - "traefik.http.routers.traefik.middlewares=chain-basic@file,traefik-strip"
      - "traefik.http.routers.traefik.service=api@internal"

  portainer:
    container_name: portainer-ce
    image: portainer/portainer-ce:2.18.3-alpine
    command:
      - '--admin-password-file /run/secrets/portainer_secrets'
      - '--no-analytics'
    networks:
      - backend
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer_data:/data"
    secrets:
      - portainer_secrets
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=leresolver"
      - "traefik.http.routers.portainer.rule=Host(`${ENV_TRAEFIK_HOST:-localhost}`) && PathPrefix(`/portainer`)"
      - "traefik.http.middlewares.portainer-strip.stripprefix.prefixes=/portainer"
      - "traefik.http.middlewares.portainer-strip.stripprefix.forceSlash=true"
      - "traefik.http.routers.portainer.middlewares=chain-whitelist@file,portainer-strip"
      - "traefik.http.routers.portainer.service=portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  nginx:
    container_name: traefik_nginx
    image: nginx:1.25.0-alpine
    networks:
      - backend
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./nginx/html:/etc/nginx/html"
      - "./nginx/error-pages:/usr/share/nginx/error-pages"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.tls.certresolver=leresolver"
      - "traefik.http.routers.nginx.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.nginx.priority=1"
      - "traefik.http.routers.nginx.middlewares=chain-basic@file"
      - "traefik.http.services.error-pages-service.loadbalancer.server.port=80"

  whoami:
    container_name: traefik_whoami
    image: traefik/whoami:v1.9.0
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.rule=Host(`${ENV_TRAEFIK_HOST:-localhost}`) && PathPrefix(`/whoami`)"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.routers.whoami.tls.certresolver=leresolver"
      - "traefik.http.routers.whoami.middlewares=chain-basic@file"

volumes:
  portainer_data:
    external: true

networks:
  frontend:
    external: true
  backend:
    external: true

secrets:
  traefik_secrets:
    file: ./.traefik_secrets.txt
  portainer_secrets:
    file: ./.portainer_secrets.txt

...
